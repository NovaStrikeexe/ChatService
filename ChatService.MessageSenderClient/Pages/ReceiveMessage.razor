@page "/receive-message"

@using ChatService.MessageSenderClient.Models
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager Navigation

<h3>Messages</h3>

@if (!IsConnected)
{
    <p style="color:red;">Not connected to the server.</p>
}

<ul>
    @foreach (var message in messages)
    {
        <li>@message.Id: @message.Content @message.Date.ToString("HH:mm:ss")</li>
    }
</ul>

@code {
    private List<Msg> messages = new();
    private HubConnection hubConnection;
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            hubConnection = new HubConnectionBuilder()
                .WithUrl(Navigation.ToAbsoluteUri("/chathub"))
                .Build();

            hubConnection.On<Msg>("ReceiveMessage", (msg) =>
            {
                messages.Add(msg);
                InvokeAsync(StateHasChanged);
            });

            await hubConnection.StartAsync();
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred while connecting to the server: {ex.Message}";
        }
    }

    public bool IsConnected => hubConnection?.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        if (hubConnection != null)
        {
            await hubConnection.DisposeAsync();
        }
    }
}